{"ast":null,"code":"/**\n * Flatten an array indefinitely.\n */\nexport function flatten(array) {\n  var result = [];\n  $flatten(array, result);\n  return result;\n}\n/**\n * Internal flatten function recursively passes `result`.\n */\n\nfunction $flatten(array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n\n    if (Array.isArray(value)) {\n      $flatten(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n}","map":{"version":3,"mappings":"AAcA;;;AAGA,OAAM,SAAUA,OAAV,CAA4CC,KAA5C,EAAoD;AACxD,MAAMC,MAAM,GAAiB,EAA7B;AACAC,UAAQ,CAAIF,KAAJ,EAAWC,MAAX,CAAR;AACA,SAAOA,MAAP;AACD;AAED;;;;AAGA,SAASC,QAAT,CACEF,KADF,EAEEC,MAFF,EAEsB;AAEpB,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAME,KAAK,GAAGL,KAAK,CAACG,CAAD,CAAnB;;AAEA,QAAIG,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxBH,cAAQ,CAACG,KAAD,EAAeJ,MAAf,CAAR;AACD,KAFD,MAEO;AACLA,YAAM,CAACO,IAAP,CAAYH,KAAZ;AACD;AACF;AACF","names":["flatten","array","result","$flatten","i","length","value","Array","isArray","push"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":["/**\n * Pick the value from an array.\n */\nexport type PickValue<T> = T extends ReadonlyArray<any>\n  ? {\n      [K in Extract<keyof T, number>]: PickValue<T[K]>;\n    }[number]\n  : T;\n\n/**\n * Flatten an `ArrayLike` object in TypeScript.\n */\nexport type FlatArray<T extends ArrayLike<any>> = Array<PickValue<T[number]>>;\n\n/**\n * Flatten an array indefinitely.\n */\nexport function flatten<T extends ArrayLike<any>>(array: T): FlatArray<T> {\n  const result: FlatArray<T> = [];\n  $flatten<T>(array, result);\n  return result;\n}\n\n/**\n * Internal flatten function recursively passes `result`.\n */\nfunction $flatten<T extends ArrayLike<any>>(\n  array: T,\n  result: FlatArray<T>\n): void {\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n\n    if (Array.isArray(value)) {\n      $flatten(value as any, result);\n    } else {\n      result.push(value);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}